sig Bool : type
val Bool =
    | True  : Bool
    | False : Bool

val true : Bool = True
val false : Bool = False

sig _&&_ : Bool -> Bool -> Bool (infixl 100)
val _&&_ =
    | True  => b => b
    | False => _ => False

sig _||_ : Bool -> Bool -> Bool (infixl 150)
val _||_ =
    | True  => _ => True
    | False => b => b

sig ~ : Bool -> Bool
val ~ =
    | True  => False
    | False => True

sig _==>_ : Bool -> Bool -> Bool (infixl 200)
val _==>_ = a b => ~ a || b

sig Equals : std.equals.Api Nat
val Equals = let open std.bool in val struct
    val _==_ =
        | True =>
            begin
            | True  => true
            | False => false
            end
        | False =>
            begin
            | True  => false
            | False => true
            end
end
