sig match_with_ : {A B:type} -> A -> (A -> B) -> B (infixl 1000)
sig match_with_ = f a => f a

-{
    match True with
    | True  => ...
    | False => ...
}-

sig if_then_else_ :
    -- open are local in this case
    let open bool in -- for Bool
    let open core in -- for Defer
    {A:type} -> Bool -> Defer A -> Defer A -> A (infixl 1000)
val if_then_else_ =
    -- open is local in this case
    let open bool in -- for True and False
    | True  => t _ => t ()
    | False => _ f => f ()

-{
    if True then ... else ...
}-