open std.option

sig [_] : type -> type (infix 500)
val [_] = A =>
    | []   : [A]
    | _::_ : A -> [A] -> [A] (infixl 500)

-- Example: 1::2::3::[] : [int]

val head : [A] -> A? =
    | []     => none
    | h :: _ => some a

val tail : [A] -> [A]? = -- Note [A] = [_] A
    | []     => none
    | _ :: t => some t

val size : [A] -> Int =
    let size : Int -> [A] -> Int =
        acc => | []     => acc
               | _ :: l => size (acc + 1) l
    in
    size 0