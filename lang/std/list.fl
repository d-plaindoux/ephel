open option

sig [_] : type -> type (infix 500)
val [_] = A =>
    | []   : [A]
    | _::_ : A -> [A] -> [A] (infixl 500)

val head : let open option in [A] -> A? =
    | []     => none
    | h :: _ => some a

val tail : let open option in [A] -> [A]? =
    | []     => none
    | _ :: t => some t

-- 1::2::3::[] : [int]