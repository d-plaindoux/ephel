sig Arrow : (_~>_: type -> type -> type) -> type
val Arrow = _~>_ =>
    let open data.category in
    sig struct
        open Category _~>_

        sig arrow : {A B:type} -> (A -> B) -> A ~> B
        sig _>>>_ : {A B C:type} -> A ~> B -> B ~> C -> A ~> C
        sig first : {A B C:type} -> A ~> B -> (A * C) ~> (B * C)
    end
